#!/bin/bash

# chkconfig: 2345 95 05
# description: Bitty. Crypto data collector

# Source function library.
# . /etc/init.d/functions

RETVAL=0
prog="bitty"
PIDFILE=/var/run/$prog.pid
LOCKFILE=/var/lock/subsys/$prog
PATH=/sbin:/usr/sbin:/bin:/usr/bin
PYTHON=/usr/bin/python
DESC="Crypto data collector"
DAEMON=$PYTHON
DAEMON_HOME="/app/"
SCRIPT=$DAEMON_HOME/collect.py
DAEMON_ARGS="$SCRIPT"
SCRIPTNAME=/etc/init.d/bitty
#the user that will run the script
USER=root

#echo "All value sets"

start() {
    if [ -f $PIDFILE ]; then
        PID=`cat $PIDFILE`
        if [ -z "`pgrep $PID`" ] && [ "$PID" != "`ps aux|grep -vE 'grep|runuser|bash'|grep -w "$SCRIPT"|awk '{print $2}'`" ]; then
            printf "%s\n" "Process dead but pidfile exists"
        else
            printf "$prog is already running!\n"
        fi
    else
        printf "%-50s" "Starting $prog ..."
        cd $DAEMON_HOME
        daemon --user $USER $DAEMON $DAEMON_ARGS >/dev/null 2>&1 &
        sleep 5
        PID=`ps aux|grep -vE 'grep|runuser|bash'|grep -w "$SCRIPT"|awk '{print $2}'`
        if [ -z "$PID" ]; then
            printf "[ FAIL ]\n"
        else
            echo $PID > $PIDFILE
            printf "[ OK ]\n"
        fi
    fi
}

stop() {
    printf "%-50s" "Shutting down $prog:"
    if [ -f $PIDFILE ]; then
        PID=`cat $PIDFILE`
        kill -HUP $PID 2>/dev/null
        printf "[ OK ]\n"
        rm -f $PIDFILE
    else
        printf "[ FAIL ]\n"
    fi
}

check_status() {
    printf "%-50s" "Checking $prog ..."
    if [ -f $PIDFILE ]; then
        PID=`cat $PIDFILE`
        if [ -z "`pgrep $PID`" ] && [ "$PID" != "`ps aux|grep -vE 'grep|runuser|bash'|grep -w "$SCRIPT"|awk '{print $2}'`" ]; then
            printf "%s\n" "Process dead but pidfile exists"
        else
            printf "[ RUNNING ]\n"
        fi
    else
        printf "[ STOPPED ]\n"
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        check_status
        ;;
    restart)
        stop
        start
        ;;
    *)
        echo "Usage: $prog {start|stop|status|restart}"
        exit 1
        ;;
esac
exit 1
